provider "{{ aws_terraform_provider }}" { }

resource "aws_security_group" "db-vpn-sg" {
  name = "db-vpn-sg"
  description = "Restricted inbound traffic"

  ingress {
      from_port = "{{ aws_terraform_mysql_port }}"
      to_port = "{{ aws_terraform_mysql_port }}"
      protocol = "{{ aws_terraform_mysql_protocol }}"
      cidr_blocks = ["{{ aws_terraform_subnet_cidr_blocks }}"]
  }

  egress {
      from_port = {{ aws_terraform_default_from_port }}
      to_port = {{ aws_terraform_default_to_port }}
      protocol = "{{ aws_terraform_default_protocol }}"
      cidr_blocks = ["{{ aws_terraform_default_cidr }}"]
  }
}

resource "aws_db_instance" "main_database" {
  identifier             = "{{ aws_terraform_rds_identifier }}"
  allocated_storage      = "{{ aws_terraform_rds_storage }}"
  engine                 = "{{ aws_terraform_rds_engine }}"
  engine_version         = "{{ aws_terraform_rds_engine_version }}"
  instance_class         = "{{ aws_terraform_rds_instance_class }}"
  name                   = "{{ aws_terraform_db_name }}"
  username               = "{{ aws_terraform_rds_username }}"
  password               = "{{ aws_terraform_rds_password }}"
  multi_az               = "{{ aws_terraform_rds_is_multi_az }}"
  storage_type           = "{{ aws_terraform_rds_storage_type }}"
  parameter_group_name   = "{{ aws_terraform_param_group_name }}"
  backup_retention_period = "{{ aws_terraform_backup_retention_period }}"
  publicly_accessible = "{{ aws_terraform_publicly_accessible }}"
  vpc_security_group_ids = ["${aws_security_group.db-vpn-sg.id}"]
  db_subnet_group_name = "{{ aws_terraform_db_subnet_group_name }}"
}
