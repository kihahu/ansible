provider "{{ aws_terraform_provider }}" { }

resource "aws_vpc" "main_vpc" {
   cidr_block = "{{ aws_terraform_cidr_block }}"
}

resource "aws_security_group" "sec_group" {
   name = "sec_group"
   description = "Restricted security group"

   ingress {
      from_port = "{{ aws_terraform_elb_ssl_port }}"
      to_port = "{{ aws_terraform_elb_ssl_port }}"
      protocol = "{{ aws_terraform_tcp_protocol }}"
      cidr_blocks = ["{{ aws_terraform_cidr_block_28 }}","{{ aws_terraform_cidr_block_29 }}","{{ aws_terraform_cidr_block_30 }}","{{ aws_terraform_cidr_block_31 }}","{{ aws_terraform_cidr_block_32 }}"]
   }

   ingress {
      from_port = "{{ aws_terraform_ssh_port }}"
      to_port = "{{ aws_terraform_ssh_port }}"
      protocol = "{{ aws_terraform_tcp_protocol }}"
      cidr_blocks = ["{{ aws_terraform_default_cidr }}"]
   }

   ingress {
      from_port = "{{ aws_terraform_data_team_from_port }}"
      to_port = "{{ aws_terraform_data_team_to_port }}"
      protocol = "{{ aws_terraform_tcp_protocol }}"
      cidr_blocks = ["{{ aws_terraform_default_cidr }}"]
   }

   ingress {
      from_port = "{{ aws_terraform_profiling_from_port }}"
      to_port = "{{ aws_terraform_profiling_to_port }}"
      protocol = "{{ aws_terraform_tcp_protocol }}"
      cidr_blocks = ["{{ aws_terraform_default_cidr }}"]
   }

   ingress {
      from_port = "{{ aws_terraform_elb_ssl_port }}"
      to_port = "{{ aws_terraform_elb_ssl_port }}"
      protocol = "{{ aws_terraform_tcp_protocol }}"
      cidr_blocks = ["{{ aws_terraform_default_cidr }}"]
   }
   ingress {
      from_port = "{{ aws_terraform_data_repository_from_port }}"
      to_port = "{{ aws_terraform_data_repository_to_port }}"
      protocol = "{{ aws_terraform_tcp_protocol }}"
      cidr_blocks = ["{{ aws_terraform_default_cidr }}"]
   }
  egress {
      from_port = "{{ aws_terraform_default_from_port }}"
      to_port = "{{ aws_terraform_default_to_port }}"
      protocol = "{{ aws_terraform_default_protocol }}"
      cidr_blocks = ["{{ aws_terraform_default_cidr }}"]
  }
}

/* API ELB AND INSTANCES */
resource "aws_elb" "api_elb" {
  name = "{{ aws_elb_name_api }}"

  availability_zones = ["${aws_instance.api_ec2.*.availability_zone}"]

  listener {
    instance_port     = {{ aws_terraform_elb_port }}
    instance_protocol = "{{ aws_terraform_elb_protocol }}"
    lb_port           = {{ aws_terraform_elb_ssl_port }}
    lb_protocol       = "{{ aws_terraform_elb_ssl_protocol }}"
    ssl_certificate_id = "{{ aws_terraform_certificate_id }}"
  }

  instances = ["${aws_instance.api_ec2.*.id}"]
}

resource "aws_instance" "api_ec2" {
  ami           = "{{ aws_terraform_region_ami }}"
  key_name      = "{{ aws_terraform_key_name }}"
  instance_type = "{{ aws_terraform_instance_type_api }}"
  vpc_security_group_ids = ["${aws_security_group.sec_group.id}"]

  count = {{ aws_terraform_default_instance_count }}

    tags {
        Name = "{{ aws_terraform_api_ec2_tag }}-${count.index}"
    }

    root_block_device {
        volume_type = "{{ aws_terraform_volume_type }}"
        volume_size = {{ aws_terraform_block_device_size }}
        delete_on_termination = true
    }
}

resource "aws_route53_record" "api_prd" {
  zone_id = "{{ zone_id }}"
  name = "{{ country_code }}-{{ aws_terraform_api_app_code }}.{{ aws_terraform_default_dns }}"
  type = "CNAME"
  ttl = "300"
  records = ["${aws_elb.api_elb.dns_name}"]
}

/* DR ELB AND INSTANCES */
resource "aws_elb" "dr_elb" {
  name = "{{ aws_elb_name_dr }}"

  availability_zones = ["${aws_instance.dr_ec2.*.availability_zone}"]

  listener {
    instance_port     = {{ aws_terraform_elb_port }}
    instance_protocol = "{{ aws_terraform_elb_protocol }}"
    lb_port           = {{ aws_terraform_elb_ssl_port }}
    lb_protocol       = "{{ aws_terraform_elb_ssl_protocol }}"
    ssl_certificate_id = "{{ aws_terraform_certificate_id }}"
  }

  instances = ["${aws_instance.dr_ec2.*.id}"]
}

resource "aws_instance" "dr_ec2" {
  ami           = "{{ aws_terraform_region_ami }}"
  key_name      = "{{ aws_terraform_key_name }}"
  instance_type = "{{ aws_terraform_instance_type_dr }}"
  vpc_security_group_ids = ["${aws_security_group.sec_group.id}"]

  count = {{ aws_terraform_default_instance_count }}

    tags {
        Name = "{{ aws_terraform_dr_tag }}-${count.index}"
    }

    root_block_device {
        volume_type = "{{ aws_terraform_volume_type }}"
        volume_size = {{ aws_terraform_block_device_size }}
        delete_on_termination = true
    }
}

resource "aws_route53_record" "dr_prd" {
  zone_id = "{{ zone_id }}"
  name = "{{ country_code }}-{{ aws_terraform_dr_app_code }}.{{ aws_terraform_default_dns }}"
  type = "CNAME"
  ttl = "300"
  records = ["${aws_elb.dr_elb.dns_name}"]
}

/* DATA LOGGING ELB AND INSTANCES */
resource "aws_elb" "data_logging_elb" {
  name = "{{ aws_elb_name_data_logging }}"

  availability_zones = ["${aws_instance.data_logging_ec2.*.availability_zone}"]

  listener {
    instance_port     = {{ aws_terraform_elb_port }}
    instance_protocol = "{{ aws_terraform_elb_protocol }}"
    lb_port           = {{ aws_terraform_elb_ssl_port }}
    lb_protocol       = "{{ aws_terraform_elb_ssl_protocol }}"
    ssl_certificate_id = "{{ aws_terraform_certificate_id }}"
  }

  instances = ["${aws_instance.data_logging_ec2.*.id}"]
}

resource "aws_instance" "data_logging_ec2" {
  ami           = "{{ aws_terraform_region_ami }}"
  key_name      = "{{ aws_terraform_key_name }}"
  instance_type = "{{ aws_terraform_instance_type_data_logging }}"
  vpc_security_group_ids = ["${aws_security_group.sec_group.id}"]

  count = {{ aws_terraform_default_instance_count }}

    tags {
        Name = "{{ aws_terraform_data_logging_tag }}-${count.index}"
    }

    root_block_device {
        volume_type = "{{ aws_terraform_volume_type }}"
        volume_size = {{ aws_terraform_block_device_size }}
        delete_on_termination = true
    }
}

resource "aws_route53_record" "data_logging_elb_prd" {
  zone_id = "{{ zone_id }}"
  name = "{{ country_code }}-{{ aws_terraform_logging_app_code }}.{{ aws_terraform_default_dns }}"
  type = "CNAME"
  ttl = "300"
  records = ["${aws_elb.data_logging_elb.dns_name}"]
}


/* DATA ELB AND INSTANCES */
resource "aws_elb" "data_elb" {
  name = "{{ aws_elb_name_data }}"

  availability_zones = ["${aws_instance.data_ec2.*.availability_zone}"]

  listener {
    instance_port     = {{ aws_terraform_elb_port }}
    instance_protocol = "{{ aws_terraform_elb_protocol }}"
    lb_port           = {{ aws_terraform_elb_ssl_port }}
    lb_protocol       = "{{ aws_terraform_elb_ssl_protocol }}"
    ssl_certificate_id = "{{ aws_terraform_certificate_id }}"
  }

  instances = ["${aws_instance.data_ec2.*.id}"]
}

resource "aws_instance" "data_ec2" {
  ami           = "{{ aws_terraform_region_ami }}"
  key_name      = "{{ aws_terraform_key_name }}"
  instance_type = "{{ aws_terraform_instance_type_data }}"
  vpc_security_group_ids = ["${aws_security_group.sec_group.id}"]

  count = {{ aws_terraform_default_instance_count }}

    tags {
        Name = "{{ aws_terraform_data_tag }}-${count.index}"
    }

    root_block_device {
        volume_type = "{{ aws_terraform_volume_type }}"
        volume_size = {{ aws_terraform_block_device_size }}
        delete_on_termination = true
    }
}

resource "aws_route53_record" "data_prd" {
  zone_id = "{{ zone_id }}"
  name = "{{ country_code }}-{{ aws_terraform_data_app_code }}.{{ aws_terraform_default_dns }}"
  type = "CNAME"
  ttl = "300"
  records = ["${aws_elb.data_elb.dns_name}"]
}


/* DATA LOGGING AND DATA DEV/QA/STAGING SINGLE INSTANCES */
resource "aws_instance" "data_logging_dev_ec2" {
  ami           = "{{ aws_terraform_region_ami }}"
  key_name      = "{{ aws_terraform_key_name }}"
  instance_type = "{{ aws_terraform_instance_type }}"
  vpc_security_group_ids = ["${aws_security_group.sec_group.id}"]

  count = {{ aws_terraform_data_dev_instance_count }}

    tags {
        Name = "{{ aws_terraform_data_logging_dev_tag }}-${count.index}"
    }

    root_block_device {
        volume_type = "{{ aws_terraform_volume_type }}"
        volume_size = {{ aws_terraform_block_device_size }}
        delete_on_termination = true
    }
}

/* PROFILING PRODUCTION SINGLE INSTANCES */
resource "aws_instance" "profiling_dev_ec2" {
  ami           = "{{ aws_terraform_region_ami }}"
  key_name      = "{{ aws_terraform_key_name }}"
  instance_type = "{{ aws_terraform_instance_type_profiling }}"
  vpc_security_group_ids = ["${aws_security_group.sec_group.id}"]

  count = {{ aws_terraform_default_instance_count }}

    tags {
        Name = "{{ aws_terraform_profiling_tag }}-${count.index}"
    }

    root_block_device {
        volume_type = "{{ aws_terraform_volume_type }}"
        volume_size = {{ aws_terraform_block_device_size }}
        delete_on_termination = true
    }
}
/* PROFILING DEV/QA/STAGING SINGLE INSTANCES */
resource "aws_instance" "profiling_dev_ec2" {
  ami           = "{{ aws_terraform_region_ami }}"
  key_name      = "{{ aws_terraform_key_name }}"
  instance_type = "{{ aws_terraform_instance_type_profiling_dev }}"
  vpc_security_group_ids = ["${aws_security_group.sec_group.id}"]

  count = {{ aws_terraform_default_instance_count }}

    tags {
        Name = "{{ aws_terraform_profiling_tag_dev }}-${count.index}"
    }

    root_block_device {
        volume_type = "{{ aws_terraform_volume_type }}"
        volume_size = {{ aws_terraform_block_device_size }}
        delete_on_termination = true
    }
}

/* DATA REPOSITORY PRODUCTION SINGLE INSTANCES */
resource "aws_instance" "data_repository_dev_ec2" {
  ami           = "{{ aws_terraform_region_ami }}"
  key_name      = "{{ aws_terraform_key_name }}"
  instance_type = "{{ aws_terraform_instance_type_data_repository }}"
  vpc_security_group_ids = ["${aws_security_group.sec_group.id}"]

  count = {{ aws_terraform_default_instance_count }}

    tags {
        Name = "{{ aws_terraform_data_repository_tag }}-${count.index}"
    }

    root_block_device {
        volume_type = "{{ aws_terraform_volume_type }}"
        volume_size = {{ aws_terraform_block_device_size }}
        delete_on_termination = true
    }
}

/* DATA REPOSITORY DEV/QA/STAGING SINGLE INSTANCES */
resource "aws_instance" "data_repository_dev_ec2" {
  ami           = "{{ aws_terraform_region_ami }}"
  key_name      = "{{ aws_terraform_key_name }}"
  instance_type = "{{ aws_terraform_instance_type_data_logging_dev }}"
  vpc_security_group_ids = ["${aws_security_group.sec_group.id}"]

  count = {{ aws_terraform_default_instance_count }}

    tags {
        Name = "{{ aws_terraform_data_repository_tag }}-${count.index}"
    }

    root_block_device {
        volume_type = "{{ aws_terraform_volume_type }}"
        volume_size = {{ aws_terraform_block_device_size }}
        delete_on_termination = true
    }
}

/* MAIN RDS INSTANCE */

resource "aws_security_group" "db-vpn-sg" {
  name = "db-vpn-sg"
  description = "Restricted inbound traffic"

  ingress {
      from_port = "{{ aws_terraform_mysql_port }}"
      to_port = "{{ aws_terraform_mysql_port }}"
      protocol = "{{ aws_terraform_tcp_protocol }}"
      cidr_blocks = ["{{ aws_terraform_cidr_block_28 }}","{{ aws_terraform_cidr_block_29 }}","{{ aws_terraform_cidr_block_30 }}","{{ aws_terraform_cidr_block_31 }}","{{ aws_terraform_cidr_block_32 }}"]
  }

  egress {
      from_port = {{ aws_terraform_default_from_port }}
      to_port = {{ aws_terraform_default_to_port }}
      protocol = "{{ aws_terraform_default_protocol }}"
      cidr_blocks = ["{{ aws_terraform_default_cidr }}"]
  }
}

resource "aws_db_instance" "main_database" {
  identifier             = "{{ aws_terraform_rds__maindb_identifier }}"
  allocated_storage      = "{{ aws_terraform_rds_storage }}"
  engine                 = "{{ aws_terraform_rds_engine }}"
  engine_version         = "{{ aws_terraform_rds_engine_version }}"
  instance_class         = "{{ aws_terraform_rds_instance_class }}"
  username               = "{{ aws_terraform_rds_username }}"
  password               = "{{ aws_terraform_rds_maindb_password }}"
  multi_az               = "{{ aws_terraform_rds_is_multi_az }}"
  storage_type           = "{{ aws_terraform_rds_storage_type }}"
  parameter_group_name   = "{{ aws_terraform_param_group_name }}"
  backup_retention_period = "{{ aws_terraform_backup_retention_period }}"
  publicly_accessible = "{{ aws_terraform_publicly_accessible }}"
  vpc_security_group_ids = ["${aws_security_group.db-vpn-sg.id}"]
  db_subnet_group_name = "{{ aws_terraform_rds_subnet_group_name }}"
}


resource "aws_db_instance" "datareceiver_main_database" {
  identifier             = "{{ aws_terraform_rds_datareceiver_maindb_identifier }}"
  allocated_storage      = "{{ aws_terraform_rds_storage }}"
  engine                 = "{{ aws_terraform_rds_engine }}"
  engine_version         = "{{ aws_terraform_rds_engine_version }}"
  instance_class         = "{{ aws_terraform_rds_instance_class }}"
  username               = "{{ aws_terraform_rds_username }}"
  password               = "{{ aws_terraform_rds_maindb_password }}"
  multi_az               = "{{ aws_terraform_rds_is_multi_az }}"
  storage_type           = "{{ aws_terraform_rds_storage_type }}"
  parameter_group_name   = "{{ aws_terraform_param_group_name }}"
  backup_retention_period = "{{ aws_terraform_backup_retention_period }}"
  publicly_accessible = "{{ aws_terraform_publicly_accessible }}"
  vpc_security_group_ids = ["${aws_security_group.db-vpn-sg.id}"]
  db_subnet_group_name = "{{ aws_terraform_rds_subnet_group_name }}"
}
