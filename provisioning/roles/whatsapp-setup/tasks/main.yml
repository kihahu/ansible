---
- name: set timestamp
  set_fact: timestamp={{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}
  tags:
    - iv-db-setup

- name: Check that the application directory is available
  stat: path={{whatsapp_app_application_dir}}
  register: p

- name: Application path exists and is a directory
  debug: msg="Application path is ok!"
  when: p.stat.isdir is defined and p.stat.isdir

- name: Application path does not exists
  fail: msg="Application path does not exists or is not directory"
  when: p.stat.isdir is not defined or not p.stat.isdir

- name: Create users groups for the whatsapp applications
  group: name={{whatsapp_app_sys_user_group}} state=present

- name: Create users for whatsapp applications
  user: name={{whatsapp_app_sys_user_name}} groups="{{whatsapp_app_sys_user_group}},www-data" append=yes

- name: Add apache user to process user group
  user: name={{apache_user}} groups="{{whatsapp_app_sys_user_group}}" append=yes

- name: Install memcached
  apt: name=memcached
  tags:
    - memcached

- name: Install python memcached
  apt: name=python-memcache
  tags:
    - memcached #python-dev libffi-dev libssl-dev

- name: Install Python libraries required
  apt: name={{item}}
  with_items:
    - python-dev
    - libffi-dev
    - libssl-dev
  tags:
    - python-ssl

- name: Make sure inventure config dir exists
  file: path={{inventure_config_path}} state=directory
  tags:
    - base-config
    - zd-ticket-proc-config
    - zd-sync-config

- name: Set up Config file
  template: src=base_config.json.j2 dest={{inventure_config_path}}/{{whatsapp_app_config_file}} owner={{whatsapp_app_sys_user_name}}
  tags:
    - base-config

- name: Set up Zendesk Ticket Proc Config file
  template: src=zendesk-ticket-proc-config.json.j2 dest={{inventure_config_path}}/{{zd_ticket_proc_conf_file}} owner={{whatsapp_app_sys_user_name}}
  tags:
    - zd-ticket-proc
    - zd-ticket-proc-config

- name: Create zendesk ticket proc app application log path
  file: path={{zd_ticket_proc_app_base_log_path}} state=directory
  tags:
    - zd-ticket-proc

- name: Check/create zendesk ticket proc application log files
  file: path={{zd_ticket_proc_app_base_log_path}}{{zd_ticket_proc_base_log_file_name}} owner={{whatsapp_app_sys_user_name}} group={{whatsapp_app_sys_user_group}} state=touch mode=ugo+rw
  tags:
    - zd-ticket-proc

- name: Create zendesk ticket proc application debug files
  file: path={{zd_ticket_proc_app_base_log_path}}/{{zd_ticket_proc_debug_file_name}} owner={{whatsapp_app_sys_user_name}} group={{whatsapp_app_sys_user_group}} state=touch mode=ugo+rw
  tags:
    - zd-ticket-proc

- name: Set up logrotate for zendesk ticket proc application
  template: src=zd-ticket-proc-app-logrotate.j2 dest={{zd_ticket_proc_app_logrotate_file}}
  tags:
    - log-rotate
    - zd-ticket-proc-log-rotate
    - zd-ticket-proc

- name: Create whatsapp app application log path
  file: path={{whatsapp_app_base_log_path}} state=directory

- name: Check/create application log files
  file: path={{whatsapp_app_base_log_path}}{{whatsapp_app_base_log_file_name}} owner={{whatsapp_app_sys_user_name}} group={{whatsapp_app_sys_user_group}} state=touch

- name: Create application debug files
  file: path={{whatsapp_app_base_log_path}}/{{whatsapp_app_debug_file_name}} owner={{whatsapp_app_sys_user_name}} group={{whatsapp_app_sys_user_group}} state=touch

- name: Set up logrotate
  template: src=whatsapp-app-logrotate.j2 dest={{whatsapp_app_logrotate_file}}
  tags:
    - log-rotate

- name: Copy log files organizer
  copy: src={{ item.from }} dest={{ item.to }} mode=uog+x
  with_items:
    - { from: 'organize-logs.sh', to: '{{ whatsapp_app_base_log_path }}' }
    - { from: 'organize-logs.sh', to: '{{ zd_sync_app_base_log_path }}' }
    - { from: 'organize-logs.sh', to: '{{ incoming_messages_app_base_log_path }}' }
  tags:
    - organize-logs

- name: Set up virtual env
  pip: virtualenv={{whatsapp_app_application_dir}}/whatsapp/{{whatsapp_app_virtual_env}} requirements={{whatsapp_app_application_dir}}/requirements.txt
  tags:
    - pip-install

- name: Zendesk Ticket Proc Flask application - Create webroot directory
  file: path={{zd_ticket_proc_app_webroot_path}} state=directory
  tags:
    - zd-ticket-proc
    - zd-ticket-proc-web-app

- name: Zendesk Ticket Proc Flask application - Create symlink to application
  file: path={{zd_ticket_proc_app_webroot_path}}/zd_ticket_proc src={{whatsapp_app_application_dir}}/zendesk_ticket_proc state=link
  tags:
    - zd-ticket-proc
    - zd-ticket-proc-web-app

- name: Zendesk Ticket Proc Flask application - Configure virtual host
  template: src=zd_ticket_proc_vhost.conf.j2 dest={{zd_ticket_proc_app_vhost}} owner={{whatsapp_app_sys_user_name}}
  tags:
    - zd-ticket-proc
    - zd-ticket-proc-web-app

- name: Zendesk Ticket Proc Flask application - Create wsgi file
  template: src=zd_ticket_proc_api.wsgi.j2 dest={{zd_ticket_proc_app_vhost_wsgi_file}} owner={{whatsapp_app_sys_user_name}}
  tags:
    - zd-ticket-proc
    - zd-ticket-proc-web-app

- name: Zendesk Ticket Proc Flask application - Enable vhost
  command: a2ensite {{zd_ticket_proc_api_name}}.conf
  notify:
    - restart apache
  tags:
    - zd-ticket-proc
    - zd-ticket-proc-web-app

- name: Flask application - Create webroot directory
  file: path={{whatsapp_app_webroot_path}} state=directory

- name: Flask application - Create symlink to application
  file: path={{whatsapp_app_webroot_path}}/whatsapp_api src={{whatsapp_app_application_dir}}/whatsapp state=link

- name: Flask application - Configure virtual host
  template: src=whatsapp_vhost.conf.j2 dest={{whatsapp_app_vhost}} owner={{whatsapp_app_sys_user_name}}
  tags:
    - conf-vhost

- name: Flask application - Create wsgi file
  template: src=whatsapp_api.wsgi.j2 dest={{whatsapp_app_vhost_wsgi_file}} owner={{whatsapp_app_sys_user_name}}

- name: Flask application - Enable vhost
  command: a2ensite {{whatsapp_app_api_name}}.conf
  # notify:
  #   - restart apache

- name: Set up SQLite databases
  include: inventure_app_db.yml
  tags:
    - iv-db-setup

- name: WhatsApp process - Create lock file directory
  file: path={{whatsapp_app_proc_lock_dir}} state=directory
  tags:
    - whatsapp-proc

- name: WhatsApp process - Make environment activation script executable
  file: path={{whatsapp_app_application_dir}}/.env state=file mode=a+x
  tags:
    - whatsapp-proc
    - im-proc

- name: Create incoming messages process application log path
  file: path={{incoming_messages_app_base_log_path}} state=directory
  tags:
    - im-proc

- name: WhatsApp process - Copy process manipulation script to init.d
  template: src=iv_whatsapp_proc.sh.j2 dest={{whatsapp_app_init_d_file}} mode=u+x
  tags:
    - whatsapp-proc

- name: Incoming Messages process - Create lock file directory
  file: path={{incoming_messages_proc_app_proc_lock_dir}} state=directory
  tags:
    - im-proc

- name: Incoming Messages process - Copy process manipulation script to init.d
  template: src=im_proc.sh.j2 dest={{incoming_messages_init_d_file}} mode=u+x
  tags:
    - im-proc

- name: Set Up Zendesk Sync Application
  include: zd_sync_app.yml
  tags:
    - zd-sync
